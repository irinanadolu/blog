<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:com:oxygenxml:specialization:qatopic.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<qatopic id="word-to-dita-frequently-asked-questions">
  <title>Word to DITA Conversion FAQ</title>
  <prolog>
    <author>Cosmin Duna</author>
    <critdates>
      <created date="2022-11-29"/>
    </critdates>
  </prolog>
  <qabody>
    <qagroup id="how-to-fix-unknown-style-warnings">
      <question>How can I fix unrecognized style warnings?</question>
      <answer>
        <p>When converting a Word document, the styles that don't have a mapping in the
            <uicontrol>Word styles mapping</uicontrol> table from the preferences page are converted
          to simple paragraph elements and a warning is reported for each of them in the
            <uicontrol>Results</uicontrol> view.</p>
        <p>As an example, suppose I have converted the Word document and I see the following
          warnings in the Results view: <image placement="break" href="images/unknownStyles.PNG"
            id="image_gqd_2kg_rvb"/></p>
        <p>Here are the steps that you should follow for this configuration:<ol id="ol_lzl_jkg_rvb">
            <li>Open the <uicontrol>Plugins / Batch Documents Converter</uicontrol> preferences page
              in Oxygen.</li>
            <li>To fix the <codeph>Unrecognized "Document Title" style for "p" Word element</codeph>
              warning, add a new row in the <uicontrol>Word styles mapping</uicontrol> table with
              the following cells:<ol id="ol_flf_nkg_rvb">
                <li>Type "p" in the <uicontrol>Word element</uicontrol> cell (because the
                  unrecognized style was found on a Word paragraph).</li>
                <li>Type "Document Title" in the <uicontrol>Word style</uicontrol> cell.</li>
                <li>In the "HTML elements" cell, you need to add a corresponding HTML element. For
                  this example, a corresponding element is "<xmlelement>h1</xmlelement>" for the
                  default mapping of the "Title" style. So, type "<i>h1:fresh</i>" into this cell.
                  The ":fresh" suffix instructs the converter to create a new element every time it
                  finds this kind of paragraph. When it's not set, the converter will try to reuse
                  the elements and combine sequences of the same style of paragraphs into a single
                  element.</li>
              </ol></li>
            <li>To fix the <codeph>Unrecognized "Keyboard Key" style for "r" Word element</codeph>
              warning, add a new row in the <uicontrol>Word styles mapping</uicontrol> table with
              the following cells:<ol id="ol_arm_3mg_rvb">
                <li>Type "r" in the <uicontrol>Word element</uicontrol> cell (because the
                  unrecognized style was found on a Word character).</li>
                <li>Type "Keyboard Key" in the <uicontrol>Word style</uicontrol> cell.</li>
                <li>In the <uicontrol>HTML elements</uicontrol> cell, you need to add a
                  corresponding HTML element. For this example, a corresponding element is
                    "<xmlelement>kbd</xmlelement>" for the default mapping of the "HTML Keyboard"
                  style. So, type "<i>kbd</i>" in this cell. </li>
              </ol></li>
          </ol> After completing these steps, you should have these two rows in the configuration
          table: <simpletable frame="all" relcolwidth="1* 1* 1*" id="simpletable_qcr_qtf_rvb2">
            <strow>
              <stentry>p</stentry>
              <stentry>Document Title</stentry>
              <stentry>h1:fresh</stentry>
            </strow>
            <strow>
              <stentry>r</stentry>
              <stentry>Keyboard Key</stentry>
              <stentry>kbd</stentry>
            </strow>
          </simpletable>
        </p>
        <p>For more information about the <uicontrol>Word styles mapping</uicontrol> configuration,
          see the following section from the documentation: <xref
            href="https://www.oxygenxml.com/doc/ug-addons/topics/batch-converter-addon.html#batch-converter-addon__wordStylesMapping"
            format="html" scope="external">Conversions from Word</xref>.</p>
      </answer>
    </qagroup>
    <qagroup id="how-to-configure-mapping-when-wanted-element-doest-exist-in-html">
      <question>How can I configure the styles mapping when the wanted element doesn't exist
        in HTML?</question>
      <answer>
        <p>A frequent case when setting the mapping configuration for a custom style is to not find
          a correspondent element in HTML, although one exists in DITA.</p>
        <p>As an example, suppose I have a Word document that contains a character custom style
          named "filepath". We know that a correspondent element exists in DITA, but we cannot find
          one in HTML.</p>
        <p>These are the steps that can be applied to handle this case: </p>
        <ol id="ol_cf3_hx1_rvb">
          <li>Go to the <uicontrol>Plugins / Batch Documents Converter</uicontrol> preferences page
            and add the following mapping in the <uicontrol>Word styles mapping</uicontrol>
              table:<simpletable frame="all" relcolwidth="1* 1* 1*" id="simpletable_qcr_qtf_rvb">
              <strow>
                <stentry>r</stentry>
                <stentry>Filepath</stentry>
                <stentry>i.filepath</stentry>
              </strow>
            </simpletable></li>
          <li>Convert the Word document to DITA. The characters styled with the <i>Filepath</i>
            style in Word are converted to the <xmlelement>i</xmlelement> element with the
              "<i>filepath</i>" <xmlatt>outputclass</xmlatt> attribute.</li>
          <li>Move the output files to your project, select them, and apply the "<b>Rename
              element</b>" refactoring operation using the "<i>//i[@outputclass = 'filepath']</i>"
            XPath for matching the target <xmlelement>i</xmlelement> element and changing them to
            the <xmlelement>filepath</xmlelement> DITA element.</li>
          <li>Apply the "Remove attribute" refactoring operation using the
            "<i>//filepath[@outputclass = 'filepath']</i>" XPath for matching the
            target elements and deleting the <xmlatt>outputclass</xmlatt>
            attributes.</li>
        </ol>
        <p>Instead of steps 3 and 4, you can also create a custom refactoring operation that makes
          these two changes, like this: </p>
        <ol id="custom_refactoring_example">
          <li>Create an XSLT file (for example, named
              <filepath>batch-converter-post-processing.xsl</filepath>) that iterates over all
            elements from the document, finds the <xmlelement>i</xmlelement> elements with the
            "filepath" <xmlatt>outputclass</xmlatt> attribute, and replaces them with the
              <xmlelement>filepath</xmlelement> elements without copying the
              <xmlatt>outputclass</xmlatt> attribute:
            <codeblock id="codeblock_ct1_pzf_rvb" outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="xs" version="2.0">

    &lt;xsl:template match="@* | node()">
        &lt;xsl:copy>
            &lt;xsl:apply-templates select="@* | node()"/>
        &lt;/xsl:copy>
    &lt;/xsl:template>

    &lt;xsl:template match="i[@outputclass = 'filepath']">
        &lt;xsl:element name="filepath">
            &lt;xsl:apply-templates select="node()"/>
        &lt;/xsl:element>
    &lt;/xsl:template>
&lt;/xsl:stylesheet></codeblock></li>
          <li>Create an XML Refactoring operation descriptor (for example, named
              <filepath>batch-converter-post-processing.xml</filepath>) that references the
            stylesheet and provides
            descriptions:<codeblock id="codeblock_tfw_nbg_rvb" outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;refactoringOperationDescriptor xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.oxygenxml.com/ns/xmlRefactoring" id="op_qzq_y2x_nsb"
    name="Post-processing Batch Documents Converter">
    &lt;description>Post-process the resulting DITA documents from the Word conversion using the Batch Documents Converter add-on.&lt;/description>
    &lt;script type="XSLT" href="batch-converter-post-processing.xsl"/>
&lt;/refactoringOperationDescriptor></codeblock></li>
          <li>Copy these two files to a folder <xref
              href="https://www.oxygenxml.com/doc/ug-editor/topics/sharing-custom-refactoring-operations.html"
              format="html" scope="external">scanned by Oxygen XML Editor when it loads the custom
              operation</xref>.</li>
          <li>Apply the new custom operation named "<i>Post-processing Batch Documents
            Converter</i>" that can now be found in the list of refactoring operations from the "XML
            Refactoring" dialog box.</li>
        </ol>
      </answer>
    </qagroup>
    <qagroup id="how-to-configure-mapping-for-codeblocks">
      <question>How can I configure the styles mapping for paragraphs styled as code
        blocks?</question>
      <answer>In Word, a code block is represented as a sequence of paragraphs styled with a custom
        style that adds a custom font and border, like this: <image href="images/wordCodeblock.PNG"
          placement="break" id="image_tfs_3r5_fwb"/> To add a mapping for this custom style, follow
        these steps:<ol id="ol_sq5_hx5_fwb">
          <li>Open the <uicontrol>Options → Preferences → Plugins → Batch Documents
              Converter</uicontrol> preferences page in Oxygen.</li>
          <li>Add a new row to the <uicontrol>Word styles mapping</uicontrol> table.</li>
          <li>Enter "<i>p</i>" in the <uicontrol>Word element</uicontrol> cell, and enter "<i>Code
              Snippet</i>" in the <uicontrol>Word style</uicontrol> cell to match the paragraphs
            styled with "Code Snippet".</li>
          <li>Enter "<i>pre:separator('\n')</i>" in the <uicontrol>HTML elements</uicontrol> cell.
            The <xmlelement>pre</xmlelement> element is the corresponding HTML element for these
            types of paragraphs. Since we want to merge these sequences of "Code Snippet" style
            paragraphs, the ":fresh" marker was not used. The "<i>:separator('')</i>" syntax
            configures a separator when the same type of consecutive paragraphs are merged. If it
            isn't specified, we would obtain a <xmlelement>pre</xmlelement> element with a single
            line of text.</li>
        </ol><p>Using this configuration, a <xmlelement>pre</xmlelement> element is the result in
          the converted <b>DITA</b> output for every code block sequence. For obtaining
            <xmlelement>codeblock</xmlelement> elements in DITA, see <xref
            href="#word-to-dita-frequently-asked-questions/how-to-configure-mapping-when-wanted-element-doest-exist-in-html"
          /> for setting a class attribute on the resulting <xmlelement>pre</xmlelement> HTML
          element (by setting "<i>pre.codeblock:separator('\n')</i>" in the <uicontrol>HTML
            elements</uicontrol> cell) and creating a custom refactoring operation.</p></answer>
    </qagroup>
    <qagroup id="how_to_preserve_shapes">
      <question>How can I preserve the Word shapes?</question>
      <answer>The converter doesn't support the Word shapes and these will be ignored when the
        document is converted to HTML or DITA. A workaround is to save them manually as SVG images
        in MS Word before the conversion. For this, you should follow these steps for every shape
        inside the document:<ol id="ol_el1_tbt_lwb">
          <li>Select the shape.</li>
          <li>Invoke the <uicontrol>Cut</uicontrol> action from the contextual menu.</li>
          <li>Invoke the <uicontrol>Paste Special...</uicontrol> action from the <menucascade>
              <uicontrol>Home</uicontrol>
              <uicontrol>Paste</uicontrol>
            </menucascade> menu.</li>
          <li>In the resulting dialog box, select <uicontrol>Picture (SVG)</uicontrol> and
            <b>OK</b>.</li>
        </ol><p>After completing these steps, the document will contain "SVG" images that will be
          preserved in the HTML or DITA results.</p></answer>
    </qagroup>
  </qabody>
</qatopic>
