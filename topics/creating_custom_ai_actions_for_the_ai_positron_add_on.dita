<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="creating_custom_ai_actions_for_the_ai_positron_add_on">
    <title>Creating Custom AI Actions for the AI Positron add-on</title>
    <prolog>
        <author>Radu Coravu</author>
        <critdates>
            <created date="2025-05-21"/>
        </critdates>
    </prolog>
    <body>
        <p>In the <xref
                href="https://www.oxygenxml.com/doc/ug-addons/topics/ai_positron.html#ai_positron__section_b5p_y14_wxb"
                format="html" scope="external">AI Positron Assistant preferences page</xref>, you
            can define a reference to a folder that contains custom actions.</p>
        <p>Once the add-on is installed, the New Document wizard can be used to create either a new
                <b>AI Positron Custom Action</b> file that contains a custom action definition in
            JSON format or an <b>AI Positron Custom Actions List</b> that contains a JSON array with
            multiple defined actions. Validation and content completion are automatically provided
            for such custom action files. To edit multi line parameter values you can switch the
            edited action JSON definition file to the <b>Author</b> visual editor mode.</p>
        <p>If the action definition files are saved in the custom actions folder defined in the AI
            Positron Assistant preferences page, the AI Positron Assistant view should automatically
            reload its Actions list to include them.</p>
        <p>Various examples of custom AI actions can be found <xref
                href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/tree/main/Custom%20Actions"
                format="html" scope="external">here</xref> and can be used as starting points for
            your own similar AI actions.</p>
        <p>An AI action definition may contain the following properties:<dl id="dl_vcf_mq1_kfc">
                <dlentry>
                    <dt>id</dt>
                    <dd>
                        <p>An unique ID for the action. If the ID of the action starts with
                                <codeph>agent.hidden.action.</codeph>, then the action is not
                            visible to be invoked directly but can be called by using the <xref
                                href="https://www.oxygenxml.com/doc/ug-addons/topics/ai_positron.html#ai_positron__dlentry_svh_mtv_g2c"
                                format="html" scope="external"
                                ><codeph>invoke_ai_action</codeph></xref> function.</p>
                        <p>Example:<codeblock id="codeblock_ghl_4q1_kfc" outputclass="language-json">{
        "id": "improve.grammar.custom.styles",
        "title": "...",
        ...
}</codeblock><note id="note_q12_br1_kfc">An Oxygen desktop plugin can
                                contribute an extra <xref
                                    href="https://www.oxygenxml.com/doc/ug-editor/dev_guide/contributing_translations_for_new_labels_and_ui_text.html"
                                    format="html" scope="external"
                                        ><filepath>translation.xml</filepath></xref> file containing
                                translations. Such a plugin may translate titles, and descriptions
                                for AI actions using the action ID as part of the key, for
                                example:<codeblock id="codeblock_lfl_rr1_kfc" outputclass="language-xml">	&lt;key value="improve.grammar.custom.styles.title"> 
		&lt;val lang="en_US">Improve Styles&lt;/val> 
		&lt;val lang="de_DE">...&lt;/val> 
		... 
	&lt;/key>
	&lt;key value="improve.grammar.custom.styles.description">
		&lt;val lang="en_US">Analyze and improve styles.&lt;/val>
		&lt;val lang="de_DE">...&lt;/val>
		...
	&lt;/key></codeblock></note></p>
                    </dd>
                </dlentry>
                <dlentry>
                    <dt>title</dt>
                    <dd>The action name/title which gets presented in the UI.
                        Example:<codeblock id="codeblock_kps_bs1_kfc" outputclass="language-json">{
        "id": "improve.grammar.custom.styles",
        "title": "Improve Grammar and Styles",
        ...
}</codeblock></dd>
                </dlentry>
                <dlentry>
                    <dt>description</dt>
                    <dd>A longer description of what the AI action does, usually used as tooltip.
                        Example:<codeblock id="codeblock_il2_ns1_kfc" outputclass="language-json">{
        "id": "...",
        "title": "Improve Grammar and Styles",
        "description": "Improve the grammar and styles based on the company's style guide."
}</codeblock></dd>
                </dlentry>
                <dlentry>
                    <dt>short-description</dt>
                    <dd>A shorter description for the AI action which appears usually under the
                        action title in the chat view. If not specified, it defaults to the
                        description value.
                        Example:<codeblock id="codeblock_h25_ts1_kfc" outputclass="language-json">{
    "id": "action.translate.to.english",
    "title": "English",
    "short-description": "Translate to English",
    "description": "Translate the selected content to English while preserving its original DITA XML markup.",
    ....
}</codeblock></dd>
                </dlentry>
                <dlentry>
                    <dt>categoryId</dt>
                    <dd>The optional category in which the AI action is visually grouped, if not
                        specified it defaults to <codeph>Other</codeph>.
                        Example:<codeblock id="codeblock_r3y_hs1_kfc" outputclass="language-json">{
        "id": "improve.grammar.custom.styles",
        "title": "Improve Grammar and Styles",
        "categoryId": "Rewrite"
}</codeblock></dd>
                </dlentry>
                <dlentry>
                    <dt>embed-assist</dt>
                    <dd>Set this optional boolean parameter to <codeph>true</codeph> to add the AI
                        action to the top right <uicontrol>AI Positron Assistant</uicontrol> drop
                        down button which appears when editing content in the
                            <uicontrol>Author</uicontrol> visual editing mode.</dd>
                </dlentry>
                <dlentry>
                    <dt>quick-assist</dt>
                    <dd>Set this optional boolean parameter to <codeph>true</codeph> to add the AI
                        action to the quick assist bulb drop down menu which appears in the left
                        vertical stripe.</dd>
                </dlentry>
                <dlentry>
                    <dt>profile</dt>
                    <dd>Set this optional parameter to confine the AI action to be visible only when
                        the add-on is installed in certain application types.
                        Example:<codeblock id="codeblock_g43_ly1_kfc" outputclass="language-json"> {
        "id": "action.create.new.xslt",
        "title": "Create New XSLT",
        "profile": "xml_editor, xml_developer",
        ....
}</codeblock></dd>
                </dlentry>
                <dlentry>
                    <dt>framework</dt>
                    <dd><p>A framework pattern (like '<codeph>DITA*</codeph>') or content type name
                            (like '<codeph>text/css</codeph>') which when matched presents the
                            action when the document pertaining to the framework is opened. Example:
                            <codeblock id="codeblock_jjg_py1_kfc" outputclass="language-json">{
    "id": "generate.img.alternate.text",
    "title": "Generate Image Alternate Text",
    "framework": "*DITA*",
    ...
}</codeblock></p>An example of an AI action which shows for any edited
                        XML document (as it matches the <codeph>text/xml</codeph> content type) can
                        be found <xref
                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/formula-equation.json"
                            format="html" scope="external">here</xref>.</dd>
                </dlentry>
                <dlentry>
                    <dt>prompt_ref</dt>
                    <dd>A reference to a separate file (usually encoded in Markdown) which defines
                        the entire action prompt. </dd>
                    <dd><xref
                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/update-title.json"
                            format="html" scope="external"
                        >Example</xref>:<codeblock id="codeblock_ukv_jcb_kfc" outputclass="language-json">{
    "id": "action.update.title.based.on.content",
    ....
    "prompt_ref": "prompts/action_update_title.md"
  }</codeblock></dd>
                    <dd>
                        <note type="important" id="note_i3p_mcb_kfc">The prompt is the most
                            important part of the AI action. A prompt must be as precise and
                            detailed as possible. Some companies may adopt prompt methodologies like
                                <uicontrol>COSTAR</uicontrol> to specify the prompt value. <xref
                                href="https://raw.githubusercontent.com/oxygenxml-incubator/ai-positron-assistant-samples/refs/heads/main/Custom%20Actions/prompts/action_validate_and_fix.md"
                                format="html" scope="external">Example of a large prompt
                                file.</xref>.</note>
                    </dd>
                </dlentry>
                <dlentry>
                    <dt>context</dt>
                    <dd>Multi-line parameter value which defines the prompt that is sent to the AI
                        along with the content to be processed. </dd>
                    <dd><xref
                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/review-logical-mistakes.json"
                            format="html" scope="external"
                            >Example</xref>:<codeblock id="codeblock_lp4_3bb_kfc" outputclass="language-json">{
    "id": "action.review.logical.mistakes",
    "title": "Logical Inconsistencies",
    "type": "show-response",
    "context": "# CONTEXT #\n\n${contextInfo}\nYou will act as a reviewer interested in finding inconsistentcy and logical mistakes.\n\n# OBJECTIVE #\n\nYou are tasked with reviewing the given content.\nFind logical and inconsistency mistakes in the content and return a report.",
    "expand-params": [
        {
            "name": "contextInfo",
            "value": "${contextInfo}"
        }
    ]
}</codeblock><note id="note_elg_mbb_kfc" type="important">The prompt is
                            the most important part of the AI action. A prompt must be as precise
                            and detailed as possible. Some companies may adopt prompt methodologies
                            like <uicontrol>COSTAR</uicontrol> to specify the prompt
                        value.</note></dd>
                </dlentry>
                <dlentry>
                    <dt>examples</dt>
                    <dd>An optional JSON array encoding examples which may help the AI better
                        understand how to apply the prompt. </dd>
                    <dd><xref
                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/Replace_bold_with_uicontrol.json"
                            format="html" scope="external"
                        >Example</xref>:<codeblock id="codeblock_qyh_zbb_kfc" outputclass="language-json">{
  "id" : "replace.bold.with.uicontrol",
  "title" : "Replace bold with uicontrol",
  "input-type" : "markup",
  "type" : "replace-selection-with-fragment",
  "context" : "Find where the bold element (&lt;b>) has been used to mark up UI elements and change those instances by replacing the bold element with the uicontrol element (&lt;uicontrol>). If you find some other content marked up with bold element, content that does not define UI elements, leave it unchanged. Also keep any other content unaltered.",
  "examples" : [ {
    "prompt" : "&lt;b>Run&lt;/b>",
    "completion" : "&lt;uicontrol>Run&lt;/uicontrol>"
  },
  {
    "prompt" : "text1 &lt;b>Run&lt;/b> text2",
    "completion" : "text1 &lt;uicontrol>Run&lt;/uicontrol> text2"
  }]
}</codeblock></dd>
                    <dd>
                        <note id="note_ywz_1cb_kfc">Examples can also be specified as part of the
                                <codeph>context</codeph> prompt or as part of the external prompt
                            file referenced with <codeph>prompt_ref</codeph>.</note>
                    </dd>
                </dlentry>
                <dlentry>
                    <dt>expand-params</dt>
                    <dd>A JSON array which can define values for parameters which should be expanded
                        in the context content. </dd>
                    <dd>All custom AI actions should define and use the
                            <codeph>${contextInfo}</codeph> parameter which gets expanded to the
                        value of the <uicontrol>Context</uicontrol> text area in the AI Positron
                        Assistant preferences page.
                        Example:<codeblock id="codeblock_xs1_gz1_kfc" outputclass="language-json">{
    "id": "thesaurus",
    "title": "Thesaurus/Synonyms",
    "type": "replace-selection-with-fragment",
    "context": "${contextInfo} Return a list of synonym alternatives for:",
    "expand-params": [
      {
        "name": "contextInfo",
        "value": "${contextInfo}"
      }
    ]
  }</codeblock>You can also define parameters which can be configured by the
                        end user when hovering the AI action in the UI. <xref
                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/Thesaurus.json"
                            format="html" scope="external"
                            >Example</xref>:<codeblock id="codeblock_o5w_pz1_kfc" outputclass="language-json">{
  "id": "thesaurus",
  "title": "Thesaurus/Synonyms",
  "type": "replace-selection-with-fragment",
  "context": "${contextInfo} Provide a max of ${number} synonyms for:",
  "expand-params": [
    ...
    {
      "name": "number",
      "label": "Number of synonyms",
      "value": "10",
      "choice-type": "single-choice",
      "alternate-values": [
        "10",
        "20",
        "30"
      ]
    }
  ]
}</codeblock><p>The following properties are available for a defined
                                parameter:<dl id="dl_utl_yz1_kfc">
                                <dlentry>
                                    <dt>name</dt>
                                    <dd>The parameter name. It can be referenced multiple times with
                                        the syntax <codeph>${param_name}</codeph> in the
                                            <codeph>context</codeph> parameter or in the external
                                        prompt file referenced using
                                        <codeph>prompt_ref</codeph>.</dd>
                                </dlentry>
                                <dlentry>
                                    <dt>label</dt>
                                    <dd>The label which appears in the UI when the parameter's value
                                        is configured by the end user.</dd>
                                </dlentry>
                                <dlentry>
                                    <dt>value</dt>
                                    <dd>The value of the parameter. It can contain various <xref
                                            href="https://www.oxygenxml.com/doc/ug-editor/topics/editor-variables.html"
                                            format="html" scope="external">editor variables</xref>
                                        which get automatically expanded. <xref
                                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/update-prolog.json"
                                            format="html" scope="external"
                                        >Example</xref>:<codeblock id="codeblock_drx_31b_kfc" outputclass="language-json">{
        "id": "action.update.prolog",
        ...
        "context": "Update the DITA XML topic prolog with the current date ${currentDate}...",
        "expand-params": [
            {
                "name": "currentDate",
                "value": "${date(yyyy-MM-dd)}"
            }
        ]
    }</codeblock></dd>
                                </dlentry>
                                <dlentry>
                                    <dt>alternate-values</dt>
                                    <dd>An optional array of alternate values which are available to
                                        be configured by the end user when hovering the AI
                                        action.</dd>
                                </dlentry>
                                <dlentry>
                                    <dt>choice-type</dt>
                                    <dd>An optional choice type defining how the end user can
                                        configure the alternate values (combo box, check boxes,
                                        radio buttons).</dd>
                                </dlentry>
                                <dlentry>
                                    <dt>prefix</dt>
                                    <dd>The optional prefix value to be used for each expansion of
                                        the parameter's value.</dd>
                                </dlentry>
                            </dl></p></dd>
                </dlentry>
                <dlentry>
                    <dt>parameters</dt>
                    <dd>An array of parameters which can be used to specify an engine name,
                        temperature or the available function definitions. Some of the most common
                        set parameters:<dl id="dl_t55_fdb_kfc">
                            <dlentry>
                                <dt>engine</dt>
                                <dd>
                                    <p>The optional name of the engine to use with the AI action, no
                                        matter what the default AI engine model is configured to
                                        be.</p>
                                    <p><xref
                                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/review-logical-mistakes.json"
                                            format="html" scope="external"
                                        >Example</xref>:<codeblock id="codeblock_egs_kdb_kfc" outputclass="language-json">{
    "id": "action.review.logical.mistakes",
    ....,
    "parameters": {
        "engine": {"name": "o1"}
    }
}</codeblock></p>
                                </dd>
                            </dlentry>
                            <dlentry>
                                <dt>temperature</dt>
                                <dd>Temperature is an optional parameter that governs the randomness
                                    and thus the creativity of the responses. It is always a number
                                    between 0 (more deterministic) and 1 (more random). The default
                                    value is 0 and it should in general remain unspecified when your
                                    AI actions are intended for technical documentation which is
                                    precise in nature.</dd>
                            </dlentry>
                            <dlentry>
                                <dt>function_refs</dt>
                                <dd>An optional JSON array which describes which functions can be
                                    used when executing this action. The list of functions which can
                                    be referenced is available <xref
                                        href="https://www.oxygenxml.com/doc/ug-addons/topics/ai_positron.html#ai_positron__section_lqv_qnt_vbc"
                                        format="html" scope="external">here</xref>.</dd>
                                <dd><xref
                                        href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/add-related-links.json"
                                        format="html" scope="external">Example</xref> of an AI
                                    action which uses <uicontrol>Retrieval Augmented Generation
                                        (RAG)</uicontrol> functions to find related content in the
                                    project:<codeblock id="codeblock_s5d_n2b_kfc" outputclass="language-json">{
    "id": "find.add.related.links",
    ...
    "parameters": {
    "function_refs": [
        {"ref": "get_related_resources_overview_from_project"},
        {"ref": "get_content_for_document_url"}
    ]
}
}</codeblock></dd>
                                <dd>
                                    <note id="note_hlw_x2b_kfc" type="important">There are specific
                                        actions which can be called to invoke from an AI action
                                        other AI actions, thus creating an agenting mechanism where
                                        various parts of the work is done by various actions. An
                                        example can be found <xref
                                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/ai-actions-composed.json"
                                            format="html" scope="external">here</xref>.</note>
                                </dd>
                            </dlentry>
                        </dl></dd>
                </dlentry>
            </dl><dl id="dl_nrp_ffb_kfc">
                <dlentry>
                    <dt>input-type</dt>
                    <dd>Describes how the XML content from the document which is sent to the
                        platform should be processed, as regular XML including markup tags or as
                        plain text without the tags and with all DITA XML content references and key
                        references expanded. By default its value is assumed to be 'markup' which
                        means the content is sent exactly as it is. Example of an AI action which
                        requires the input to be sent without any markup tags and with the DITA XML
                        conrefs and keyrefs
                        expanded:<codeblock id="codeblock_qkc_lgb_kfc" outputclass="language-json">{
    "id": "action.answer.questions",
    "type": "show-response",
    "description": "Generate answers to questions you ask based on the selected text or on the entire document content.",
    "input-type": "plain-text",
    ....
  }</codeblock></dd>
                </dlentry>
                <dlentry>
                    <dt>type</dt>
                    <dd>The type of the AI action. Some of the most used type values are listed
                            below:<dl id="dl_rjl_ngb_kfc">
                            <dlentry>
                                <dt>replace-selection-with-fragment</dt>
                                <dd>The most common type of action. Send the selected content to the
                                    AI platform and propose to replace the selection with the
                                    received response. If there is no selected content automatically
                                    the entire document is selected when the action is
                                            invoked.<p><xref
                                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/Replace_bold_with_uicontrol.json"
                                            format="html" scope="external"
                                        >Example</xref>:<codeblock id="codeblock_tfr_ygb_kfc" outputclass="language-json">{
  "id" : "replace.bold.with.uicontrol",
  "title" : "Replace bold with uicontrol",
  "type" : "replace-selection-with-fragment",
  "context" : "Replace the bold element with the uicontrol element (&lt;uicontrol>)....",
}</codeblock></p></dd>
                            </dlentry>
                            <dlentry>
                                <dt>insert-schema-aware-fragment</dt>
                                <dd>Insert in the current document at the caret offset or at an
                                    offset specified by the <codeph>insert-modes</codeph> the
                                    content received from the AI engine. If the inserted content is
                                    invalid at the proposed offset, the application attempts to find
                                    a proper location for it. <xref
                                        href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/update-title.json"
                                        format="html" scope="external"
                                    >Example</xref>:<codeblock id="codeblock_ecl_fhb_kfc" outputclass="language-json">{
    "id": "action.update.title.based.on.content",
    "type": "insert-schema-aware-fragment",
    "title": "Update Title",
    "context": "You are tasked with creating a title for the given text, summarizing it and focusing on its main points:"
}</codeblock></dd>
                            </dlentry>
                            <dlentry>
                                <dt>prompt-user</dt>
                                <dd>Show a dialog asking for a context and then run the
                                            action.<p><xref
                                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/formula-equation.json"
                                            format="html" scope="external"
                                        >Example</xref>:<codeblock id="codeblock_wt3_rhb_kfc" outputclass="language-json">{
        "id": "action.formula.equation",
        "title": "Formula/Equation",
        "type": "prompt-user",
        "additional_info": {"prompt-example": "hydrogen peroxide"},
        ...
}</codeblock></p></dd>
                            </dlentry>
                            <dlentry>
                                <dt>show-response</dt>
                                <dd>Send the selected content or the entire document to the AI
                                    platform and show the response to the end user.<p><xref
                                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/review-logical-mistakes.json"
                                            format="html" scope="external"
                                        >Example</xref>:<codeblock id="codeblock_v4c_b3b_kfc" outputclass="language-json">{
    "id": "action.review.logical.mistakes",
    "title": "Logical Inconsistencies",
    "type": "show-response",
    "context": "Find logical and inconsistency mistakes in the content and return a report.",
}</codeblock></p></dd>
                            </dlentry>
                        </dl><dl id="dl_ssk_g3b_kfc">
                            <dlentry>
                                <dt>create-new-document</dt>
                                <dd>Show a dialog asking for a context and then create a new
                                    document based on the received server response. The
                                        <codeph>"additional_info"/"properties"/"file_extension"</codeph>
                                    property can be set to impose an extension for the newly created
                                            document.,<p><xref
                                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/create-schematron-rules.json"
                                            format="html" scope="external"
                                        >Example</xref>:<codeblock id="codeblock_v55_j3b_kfc" outputclass="language-json">{
    "id": "action.create.schematron.rules",
    "title": "Schematron Rules from Style Guide",
    "type": "create-new-document",
    "additional_info": {
        "properties": {"file_extension": "sch"}
    },
    "prompt_ref": "prompts/create-schematron-rules.md"
}</codeblock></p></dd>
                            </dlentry>
                        </dl></dd>
                </dlentry>
                <dlentry>
                    <dt>insert-modes</dt>
                    <dd>A JSON array which defines places for inserting the content in an XML
                        document. The first mode for which the XPath condition becomes true is run.
                        Such modes are used when the AI action <codeph>type</codeph> is
                            <codeph>insert-schema-aware-fragment</codeph>.</dd>
                    <dd><xref
                            href="https://github.com/oxygenxml-incubator/ai-positron-assistant-samples/blob/main/Custom%20Actions/update-title.json"
                            format="html" scope="external"
                        >Example</xref>:<codeblock id="codeblock_nsq_pfb_kfc" outputclass="language-json">{
    "id": "action.update.title.based.on.content",
    ...
    "type": "insert-schema-aware-fragment",
    ...
    "insert-modes": [
      {
        "xpath-condition": "(//title)[1]",
        "target-location": "(//title)[1]",
        "action": "replace"
      },
      {
        "target-location": "(//shortdesc)[1]",
        "action": "insert-before"
      }
    ]...
  }</codeblock></dd>
                </dlentry>
            </dl></p>
    </body>
</topic>
